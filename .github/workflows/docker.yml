#
name: docker build & push

# This workflow runs when any of the following occur:
# - A push is made to a branch called `main` or `seed`
# - A tag starting with "v" is created
# - A pull request is created or updated
on:
  workflow_dispatch:
  push:
    paths-ignore:
      - '.github/**'
      - 'README.md'
      - '.gitignore'
    branches:
      - master
  # This creates an environment variable called `IMAGE_NAME ` with the value `ghtoken_product_demo`.
env:
  IMAGE_NAME: ${{ github.event.repository.name }}
jobs:
  # This pushes the image to GitHub Packages.
  push:
    runs-on: ubuntu-latest
    permissions:
      packages: write
      contents: read
      #
    steps:
      - uses: actions/checkout@v4
      - uses: actions/setup-java@v4
        with:
          java-version: '22'
          distribution: 'temurin'

      - name: Change wrapper permissions
        run: chmod +x ./gradlew

      - name: Gradle Build
        run: ./gradlew build

      - name: Build image
        run: docker build --file Dockerfile --build-arg JAR_FILE=build/libs/\*.jar --tag $IMAGE_NAME --label "runnumber=${GITHUB_RUN_ID}" .

      - name: Log in to registry
        run: echo "${{ secrets.GITHUB_TOKEN }}" | docker login ghcr.io -u $ --password-stdin
        #
      - name: Push image
        run: |
          IMAGE_ID=ghcr.io/${{ github.repository_owner }}/$IMAGE_NAME

          # This changes all uppercase characters to lowercase.
          IMAGE_ID=$(echo $IMAGE_ID | tr '[A-Z]' '[a-z]')
          # This strips the git ref prefix from the version.
          VERSION=$(echo "${{ github.ref }}" | sed -e 's,.*/\(.*\),\1,')
          # This strips the "v" prefix from the tag name.
          [[ "${{ github.ref }}" == "refs/tags/"* ]] && VERSION=$(echo $VERSION | sed -e 's/^v//')
          # This uses the Docker `latest` tag convention.
          [ "$VERSION" == "main" ] && VERSION=latest
          echo IMAGE_ID=$IMAGE_ID
          echo VERSION=$VERSION
          docker tag $IMAGE_NAME $IMAGE_ID:$VERSION
          docker push $IMAGE_ID:$VERSION
      # UNCOMMENT THIS FOLLOWING SECTION FOR AUTOMATING PULL/DEPLOYMENT ON GIT PUSH
      #- name: Pull to host
      #  uses: appleboy/ssh-action@v1.2.0
      #  with:
      #    host: ${{ secrets.HOST }}
      #    username: ${{ secrets.USERNAME }}
      #    password: ${{ secrets.PASSWORD }}
      #    script: |
      #      cd ${{ secrets.COMPOSE_DIRECTORY }}
      #      docker compose down && docker compose pull && docker compose up -d

